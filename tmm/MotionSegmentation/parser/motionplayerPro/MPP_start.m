function MPP_start()

global SCENE;

% help --------------------------------------------------------------------
helpDlg = {'Key-Bindings:',...
    '------------------------------------------------------',...
    '<space>:','       play/pause',...
    '<leftarrow>:','       move motion back 10 frames',...
    '<downarrow>:','       move motion back 100 frames',...
    '<rightarrow>:','       move motion forward 10 frames',...
    '<uparrow>:','       move motion forward 100 frames',...
    '<shift>+<mouse>:','       orbit rotate scene',...
    '<alt>+<mouse>:','       pan scene',...
    '<mousewheel>:','       zoom scene'};

% figure and camera settings ----------------------------------------------

axisDimensions = renewAxisDimensions(SCENE.boundingBox);
axis(axisDimensions);

%% control panel-----------------------------------------------------------

SCENE.handles.control_Panel = uipanel(...
    'Parent',SCENE.handles.fig,...
    'Units','pixels',...
    'Position',[2 2 799 110],...
    'BackgroundColor',[.97 .97 .97]);

SCENE.handles.goto_First_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.goto_First,...'String','|<',...
    'Units','pixels',...
    'Position',[2 80 27 20],...
    'TooltipString','go to first frame',...
    'BackgroundColor',SCENE.colors.buttons_group1, ...
    'CallBack',@gotoFirstFunction);

SCENE.handles.play_reverse_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.play_reverse,...'String','<|',...
    'Units','pixels',...
    'Position',[30 80 27 20],...
    'TooltipString','play backwards',...
    'BackgroundColor',SCENE.colors.buttons_group1, ...
    'CallBack',@playReverseFunction);

SCENE.handles.pause_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.pause,...'String','||',...
    'Units','pixels',...
    'Position',[58 80 27 20],...
    'TooltipString','pause',...
    'BackgroundColor',SCENE.colors.buttons_group1, ...
    'CallBack',@pauseFunction);

SCENE.handles.play_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.play,...'String','|>',...
    'Units','pixels',...
    'Position',[86 80 27 20],...
    'TooltipString','play',...
    'BackgroundColor',SCENE.colors.buttons_group1, ...
    'CallBack',@playFunction);

SCENE.handles.goto_Last_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.goto_Last,...'String','>|',...
    'Units','pixels',...
    'Position',[114 80 27 20],...
    'TooltipString','go to last frame',...
    'BackgroundColor',SCENE.colors.buttons_group1, ...
    'CallBack',@gotoLastFunction);

SCENE.handles.slower_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.slower,...'String','<<',...
    'Units','pixels',...
    'Position',[148 80 27 20],...
    'TooltipString','slower',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@slowerFunction);

SCENE.handles.loop_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.unlooped,...'String','|--|',...
    'Units','pixels',...
    'Position',[176 80 27 20],...
    'TooltipString','loop',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@loopFunction);

SCENE.handles.faster_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.faster,...'String','>>',...
    'Units','pixels',...
    'Position',[204 80 27 20],...
    'TooltipString','faster',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@fasterFunction);

SCENE.handles.drawCoordSyst_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.coords+0.5,...
    'Units','pixels',...
    'Position',[236 80 27 20],...
    'TooltipString','draw coordinate system',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@drawCoordinateSystem);

SCENE.handles.drawLocalCoordSyst_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.localcoords+0.5,...
    'Units','pixels',...
    'Position',[264 80 27 20],...
    'TooltipString','draw local coordinate systems',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@drawLocalCoordinateSystems2);

SCENE.handles.drawGroundPlane_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.groundPlane,...
    'Units','pixels',...
    'Position',[292 80 27 20],...
    'TooltipString','hide ground plane',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@drawGroundPlane);

hold all;
computeGroundPlane(SCENE.boundingBox);
if ~SCENE.status.groundPlane_drawn
    set(SCENE.handles.drawGroundPlane_Button,'CData',SCENE.buttons.groundPlane+0.5,'TooltipString','draw ground plane');
    set(SCENE.handles.groundPlane,'FaceAlpha',0,'EdgeColor','none');
end
hold off;

SCENE.handles.drawJointIDs_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.jointIDs+0.5,...
    'Units','pixels',...
    'Position',[320 80 27 20],...
    'TooltipString','show joint IDs',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@drawJointIDs);

SCENE.handles.drawSensorCoordSyst_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.sensorcoords+0.5,...
    'Units','pixels',...
    'Position',[348 80 27 20],...
    'TooltipString','draw sensor coordinate systems',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@drawSensorCoordinateSystems);

% SCENE.handles.drawSensorCoordSyst2_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
%     'CData',SCENE.buttons.sensorcoords+0.5,...
%     'Units','pixels',...
%     'Position',[348 80 27 20],...
%     'TooltipString','draw sensor coordinate systems',...
%     'BackgroundColor',SCENE.colors.buttons_group2, ...
%     'CallBack',@drawSensorCoordinateSystems2);

SCENE.handles.spread_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.spread+0.5,...
    'Units','pixels',...
    'Position',[376 80 27 20],...
    'TooltipString','spread motions',...
    'BackgroundColor',SCENE.colors.buttons_group2, ...
    'CallBack',@spreadFunction);

if SCENE.nmots==1
    set(SCENE.handles.spread_Button,'Visible','off');
end


SCENE.handles.MotName_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'String','Name',...
    'Units','pixels',...
    'Position',[SCENE.size(1)-41-7*32 7 30 20],...
    'TooltipString','Display Mot Names',...
    'BackgroundColor',[0.0 1.0 0.0], ...
    'CallBack',@dispMotNames);

SCENE.handles.Sketch_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'String','Sketch',...
    'Units','pixels',...
    'Position',[SCENE.size(1)-41-6*32 7 30 20],...
    'TooltipString','sketch a frame',...
    'BackgroundColor',[0.0 0.1 0.9], ...
    'CallBack',@sketchFrame);

SCENE.handles.AutoCam_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.renderScene,...
    'Units','pixels',...
    'Position',[SCENE.size(1)-41-5*32 7 30 20],...
    'TooltipString','compute Auto Camera',...
    'BackgroundColor',[0.1 0.8 0.1], ...
    'CallBack',@computeAutoCam);

SCENE.handles.AutoCam_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.exportFrame,...
    'Units','pixels',...
    'Position',[SCENE.size(1)-41-4*32 7 30 20],...
    'TooltipString','export motions to obj files',...
    'BackgroundColor',[0.1 0.8 0.1], ...
    'CallBack',@exportMotToObj);

SCENE.handles.export_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.exportFrame,...
    'Units','pixels',...
    'Position',[SCENE.size(1)-41-3*32 7 30 20],...
    'TooltipString','export frame to obj files',...
    'BackgroundColor',[0.9 0.3 0], ...
    'CallBack',@exportObjFiles);

SCENE.handles.render_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.renderScene,...
    'Units','pixels',...
    'Position',[SCENE.size(1)-41-2*32 7 30 20],...
    'TooltipString','render Scene to avi',...
    'BackgroundColor',[0.9 0.3 0], ...
    'CallBack',@renderMPProScene);

SCENE.handles.help_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'String','Help',...
    'Units','pixels',...
    'FontWeight','bold',...
    'HorizontalAlignment','center',...
    'Position',[SCENE.size(1)-41-32 6 30 22],...
    'CallBack',@helpButtonFunction);

SCENE.handles.quit_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
    'CData',SCENE.buttons.quit,...'String','Quit',...
    'Units','pixels',...
    'Position',[SCENE.size(1)-41 7 30 20],...
    'TooltipString','quit',...
    'BackgroundColor',[0.9,.0,.0], ...
    'CallBack',@closeFunction);

% SCENE.handles.axis_x_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
%     'String','x',...
%     'Units','pixels',...
%     'Position',[284 80 20 20],...
%     'FontWeight','bold',...
%     'TooltipString','set main axis to x',...
%     'BackgroundColor',[0.8,0.8,0.8], ...
%     'CallBack',@setMainAxisFunction);
% 
% SCENE.handles.axis_y_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
%     'String','y',...
%     'Units','pixels',...
%     'Position',[306 80 20 20],...
%     'FontWeight','bold',...
%     'TooltipString','set main axis to y',...
%     'BackgroundColor',[0.9,0.9,0.97], ...
%     'CallBack',@setMainAxisFunction);
% 
% SCENE.handles.axis_z_Button = uicontrol(SCENE.handles.control_Panel,'Style','Pushbutton', ...
%     'String','z',...
%     'Units','pixels',...
%     'Position',[328 80 20 20],...
%     'FontWeight','bold',...
%     'TooltipString','set main axis to z',...
%     'BackgroundColor',[0.8,0.8,0.8], ...
%     'CallBack',@setMainAxisFunction);

SCENE.handles.status_Panel = uipanel(...
    'Parent',SCENE.handles.control_Panel,'Units','pixels',...
    'Position',[2 2 SCENE.size(1)-8 30],...
    'BackgroundColor',[.97 .97 .97]);

SCENE.handles.curFrameLabel = uicontrol(SCENE.handles.status_Panel,'Style','Text', ...
    'String',sprintf(' 1 / %d (%.2f s)', SCENE.nframes,0),...
    'Units','pixels',...
    'TooltipString','current frame',...
    'HorizontalAlignment','left',...
    'BackgroundColor',[.97 .97 .97],...
    'Position',[1 0 130 22]);

SCENE.handles.curSpeedLabel = uicontrol(SCENE.handles.status_Panel,'Style','Text', ...
    'String','x 1.000',...
    'Units','pixels',...
    'TooltipString','current speed',...
    'HorizontalAlignment','left',...
    'BackgroundColor',[.97 .97 .97],...
    'Position',[150 0 40 22]);

% add frame markers above slider ------------------------------------------
if(SCENE.nframes > 1)
    SCENE.handles.sliderHandle = uicontrol(SCENE.handles.control_Panel,'Style','Slider', ...
        'String','Current Frame',...
        'Units','pixels',...
        'Max',SCENE.nframes,...
        'Min',1,...
        'Value',1,...
        'SliderStep',[1/SCENE.nframes (1/SCENE.size(1))*40],...
        'Position',[2 35 SCENE.size(1)-8 20],...
        'BackgroundColor',[.8 .8 .8], ...
        'CallBack',@moveFrameSliderFunction);
    
    if SCENE.nframes<=20
        numMarks = SCENE.nframes;
    else
        numMarks = 15;
    end
    for i=20:-1:5
        if mod(SCENE.nframes-1,i)==0
            numMarks=i+1;
            break;
        end
    end
    
    posFromLeft = 11;
    posFromRight = SCENE.size(1)-62;
    posFromLeft = posFromLeft-(posFromRight-posFromLeft)/(SCENE.nframes-1);
    
    for frameNum = 1:(SCENE.nframes-1)/(numMarks-1):SCENE.nframes
        uicontrol(SCENE.handles.control_Panel,'Style','Text',...
            'String',round(frameNum),'Units','pixels',...
            'FontSize',7,'BackgroundColor',[.97 .97 .97],...
            'Position',[posFromLeft+(round(frameNum)/SCENE.nframes)*(posFromRight-posFromLeft) 60 45 12]);
    end
end

%% callback functions -----------------------------------------------------

    function drawGroundPlane(varargin)
        if SCENE.status.groundPlane_drawn
            SCENE.status.groundPlane_drawn = false;
%             set(SCENE.handles.groundPlane,'Visible','off');
            set(SCENE.handles.drawGroundPlane_Button,'CData',SCENE.buttons.groundPlane+0.5,'TooltipString','draw ground plane');
            set(SCENE.handles.groundPlane,'FaceAlpha',0,'EdgeColor','none');
        else
            SCENE.status.groundPlane_drawn = true;
%             set(SCENE.handles.groundPlane,'Visible','on');
            set(SCENE.handles.drawGroundPlane_Button,'CData',SCENE.buttons.groundPlane,'TooltipString','hide ground plane');
            set(SCENE.handles.groundPlane,'FaceAlpha',0.7,'EdgeColor','none');
        end
    end

    function playReverseFunction(varargin)
        if (SCENE.status.curFrame == 1)
            SCENE.status.curFrame = SCENE.nframes;
        end
        SCENE.status.reverse    = true;
        SCENE.status.running    = true;
        SCENE.status.timeStamp  = (SCENE.status.curFrame)/SCENE.samplingRate;
        SCENE.timeOffset        = SCENE.status.timeStamp;
        
        tic;
        while SCENE.status.running && (SCENE.status.curFrame>1 || SCENE.status.looped)
            nextFrame = getNextFrame_local();
            if SCENE.status.running
                setFramePro(nextFrame);
                drawnow; 
                SCENE.status.timeStamp = SCENE.timeOffset-toc*SCENE.status.speed;
            end
        end
        SCENE.status.running = false;
    end

    function pauseFunction(varargin)
        SCENE.status.running = false;
    end

    function playFunction(varargin)
        if (SCENE.status.curFrame == SCENE.nframes)
            SCENE.status.curFrame = 1;
        end
        SCENE.status.reverse    = false;
        SCENE.status.running    = true;
        SCENE.status.timeStamp  = (SCENE.status.curFrame)/SCENE.samplingRate;
        SCENE.timeOffset        = SCENE.status.timeStamp;
         
        tic;
        while SCENE.status.running && (SCENE.status.curFrame<SCENE.nframes || SCENE.status.looped)
            nextFrame               = getNextFrame_local();
            if SCENE.status.running
                setFramePro(nextFrame);
                drawnow;
                SCENE.status.timeStamp = SCENE.timeOffset+toc*SCENE.status.speed;
            end
        end
        SCENE.status.running = false;
    end

    function gotoFirstFunction(varargin)
        SCENE.status.running    = false;
        SCENE.status.curFrame   = 1;
        setFramePro(1);
        drawnow();
    end

    function gotoLastFunction(varargin)
        SCENE.status.running    = false;
        SCENE.status.curFrame   = SCENE.nframes;
        setFramePro(SCENE.nframes);
        drawnow();
    end

    function closeFunction(varargin)
        SCENE.status.running = false;
        close;
        SCENE.objects = [];
        SCENE.mots    = [];
        SCENE.nmots   = 0;
        SCENE.skels   = [];
        SCENE.nskels  = 0;        
%         clear global SCENE;
    end

    function slowerFunction(varargin)
        if (SCENE.status.speed > 0.125)
            SCENE.status.speed = SCENE.status.speed/2;
            set(SCENE.handles.curSpeedLabel,'String',...
                sprintf('x %1.3f',SCENE.status.speed));
            SCENE.status.timeStamp = (SCENE.status.curFrame)/SCENE.samplingRate;
            SCENE.timeOffset   = SCENE.status.timeStamp;
            tic;
        end
    end

    function fasterFunction(varargin)
        if (SCENE.status.speed < 8)
            SCENE.status.speed = SCENE.status.speed*2;
            set(SCENE.handles.curSpeedLabel,'String',...
                sprintf('x %1.3f',SCENE.status.speed));
            SCENE.status.timeStamp = (SCENE.status.curFrame)/SCENE.samplingRate;
            SCENE.timeOffset   = SCENE.status.timeStamp;
            tic;
        end
    end

    function loopFunction(varargin)
        if (SCENE.status.looped)
            SCENE.status.looped = false;
            set(SCENE.handles.loop_Button, 'CData',SCENE.buttons.unlooped,'TooltipString','loop');
        else
            SCENE.status.looped = true;
            set(SCENE.handles.loop_Button, 'CData',SCENE.buttons.looped,'TooltipString','no loop');
        end
    end

    function drawJointIDs(varargin)
        if SCENE.status.jointIDs_drawn
            SCENE.status.jointIDs_drawn = false;
            for ii=1:SCENE.nmots
                arrayfun(@(x) delete(x), SCENE.mots{ii}.jointID_handles);
            end
            set(SCENE.handles.drawJointIDs_Button,'CData',SCENE.buttons.jointIDs+0.5,'TooltipString','show joint IDs');
        else
            SCENE.status.jointIDs_drawn = true;
            if ~SCENE.status.running
                setFramePro(SCENE.status.curFrame);
            end
            set(SCENE.handles.drawJointIDs_Button,'CData',SCENE.buttons.jointIDs,'TooltipString','hide joint IDs');
        end
    end

    function moveFrameSliderFunction(varargin)
        
        if (SCENE.status.running)
            SCENE.status.running = false;
        end
        
        curFrame            = round(get(SCENE.handles.sliderHandle,'Value'));
        SCENE.status.timeStamp = curFrame/SCENE.samplingRate;
        SCENE.timeOffset    = SCENE.status.timeStamp;
        
        setFramePro(curFrame);
        drawnow;
    end

    function spreadFunction(varargin)       
        if SCENE.status.spread == false

            for m=1:SCENE.nmots
                if SCENE.mots{m}.rotDataAvailable
                    spreadVertices(m);
                else
                    spreadVerticesPC(m);
                end
            end
            computeBoundingBoxSCENE();
            
            set(SCENE.handles.spread_Button, 'CData',SCENE.buttons.spread,'TooltipString','unspread motions');
            SCENE.status.spread = true;
            if SCENE.status.groundPlane_drawn
                computeGroundPlane(SCENE.boundingBox);
            end
            axisDimensions = renewAxisDimensions(SCENE.boundingBox);
            axis(axisDimensions);
        else

            for m=1:SCENE.nmots
                if SCENE.mots{m}.rotDataAvailable
                    unspreadVertices(m);
                end
            end
            computeBoundingBoxSCENE();
            
            set(SCENE.handles.spread_Button, 'CData',SCENE.buttons.spread+0.5,'TooltipString','spread motions');
            SCENE.status.spread = false;
            if SCENE.status.groundPlane_drawn
                computeGroundPlane(SCENE.boundingBox);
            end
            axisDimensions = renewAxisDimensions(SCENE.boundingBox);
            axis(axisDimensions);
        end
        setFramePro(SCENE.status.curFrame);
    end

    function helpButtonFunction(src,evnt)
%                 msgbox(helpDlg,'Help','help');
        helpFig = figure( 'Visible','on',...
            'Name','Help',...
            'NumberTitle','off',...
            'Menu','none',...
            'Position',[400,200,250,400],...
            'Resize', 'on', ...
            'Color',[.92 .95 .95]);
        uicontrol(helpFig,'Style','Text', ...
            'String',helpDlg,...
            'Units','pixels',...
            'HorizontalAlignment','left',...
            'BackgroundColor',[.97 .97 .97],...
            'Position',[0 0 250 400]);
    end

end

%% local functions --------------------------------------------------------

function nextFrame = getNextFrame_local()
    global SCENE;
    
    framesToDrop = SCENE.status.timeStamp*SCENE.samplingRate-SCENE.status.curFrame;
    
    if SCENE.status.reverse
        nextFrame = SCENE.status.curFrame+round(framesToDrop)-1;
    else
        nextFrame = SCENE.status.curFrame+round(framesToDrop)+1;
    end

    if nextFrame<=0
        if SCENE.status.looped
            nextFrame   = SCENE.nframes;
        else
            nextFrame = 1;
        end
    elseif nextFrame>SCENE.nframes
        if SCENE.status.looped
            nextFrame   = 1;%mod(nextFrame,SCENE.nframes);
        else
            nextFrame = SCENE.nframes;
        end
    end

    if (framesToDrop<0 && ~SCENE.status.reverse) || (framesToDrop>0 && SCENE.status.reverse)
        pause(abs(framesToDrop/SCENE.samplingRate));
    end
end